<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classgtsam_1_1NoiseModelFactor5" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>gtsam::NoiseModelFactor5</compoundname>
    <basecompoundref refid="classgtsam_1_1NoiseModelFactor" prot="public" virt="non-virtual">gtsam::NoiseModelFactor</basecompoundref>
    <includes refid="NonlinearFactor_8h" local="no">NonlinearFactor.h</includes>
    <templateparamlist>
      <param>
        <type>class VALUE1</type>
      </param>
      <param>
        <type>class VALUE2</type>
      </param>
      <param>
        <type>class VALUE3</type>
      </param>
      <param>
        <type>class VALUE4</type>
      </param>
      <param>
        <type>class VALUE5</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor5_1a514869f1357a9e05118bfab0c6fa97e2" prot="public" static="no">
        <type>VALUE1</type>
        <definition>typedef VALUE1 gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::X1</definition>
        <argsstring></argsstring>
        <name>X1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="583" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="583" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor5_1ad9181205117e8efb56ebe4f297645d3e" prot="public" static="no">
        <type>VALUE2</type>
        <definition>typedef VALUE2 gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::X2</definition>
        <argsstring></argsstring>
        <name>X2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="584" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="584" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor5_1aeb3efb9dbda7a2fef53c55a4513ab4ec" prot="public" static="no">
        <type>VALUE3</type>
        <definition>typedef VALUE3 gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::X3</definition>
        <argsstring></argsstring>
        <name>X3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="585" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="585" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor5_1a4e272b4742d0477f444995ec73e097c7" prot="public" static="no">
        <type>VALUE4</type>
        <definition>typedef VALUE4 gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::X4</definition>
        <argsstring></argsstring>
        <name>X4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="586" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="586" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor5_1afaf024c990892895e5f5ed0b34758f27" prot="public" static="no">
        <type>VALUE5</type>
        <definition>typedef VALUE5 gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::X5</definition>
        <argsstring></argsstring>
        <name>X5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="587" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="587" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-type">
      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor5_1a594617cffc3d1a9985cd64e34936a7f5" prot="protected" static="no">
        <type><ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref></type>
        <definition>typedef NoiseModelFactor gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::Base</definition>
        <argsstring></argsstring>
        <name>Base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="591" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="591" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classgtsam_1_1NoiseModelFactor5_1a19020d6d909366475872911b6dfc16df" prot="protected" static="no">
        <type><ref refid="classgtsam_1_1NoiseModelFactor5" kindref="compound">NoiseModelFactor5</ref>&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;</type>
        <definition>typedef NoiseModelFactor5&lt;VALUE1, VALUE2, VALUE3, VALUE4, VALUE5&gt; gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::This</definition>
        <argsstring></argsstring>
        <name>This</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="592" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="592" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classgtsam_1_1NoiseModelFactor5_1ac98d07dd8f7b70e16ccb9a01abf56b9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class boost::serialization::access</definition>
        <argsstring></argsstring>
        <name>boost::serialization::access</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Serialization function </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="651" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="651" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1a424c4633f6c1907d0dd3381cffbed82a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::NoiseModelFactor5</definition>
        <argsstring>()</argsstring>
        <name>NoiseModelFactor5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default Constructor for I/O </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="599" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="599" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1a01d2e8a5253a67ceac02320a719c5280" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::NoiseModelFactor5</definition>
        <argsstring>(const SharedNoiseModel &amp;noiseModel, Key j1, Key j2, Key j3, Key j4, Key j5)</argsstring>
        <name>NoiseModelFactor5</name>
        <param>
          <type>const SharedNoiseModel &amp;</type>
          <declname>noiseModel</declname>
        </param>
        <param>
          <type>Key</type>
          <declname>j1</declname>
        </param>
        <param>
          <type>Key</type>
          <declname>j2</declname>
        </param>
        <param>
          <type>Key</type>
          <declname>j3</declname>
        </param>
        <param>
          <type>Key</type>
          <declname>j4</declname>
        </param>
        <param>
          <type>Key</type>
          <declname>j5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>noiseModel</parametername>
</parameternamelist>
<parameterdescription>
<para>shared pointer to noise model </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j1</parametername>
</parameternamelist>
<parameterdescription>
<para>key of the first variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j2</parametername>
</parameternamelist>
<parameterdescription>
<para>key of the second variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j3</parametername>
</parameternamelist>
<parameterdescription>
<para>key of the third variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j4</parametername>
</parameternamelist>
<parameterdescription>
<para>key of the fourth variable </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j5</parametername>
</parameternamelist>
<parameterdescription>
<para>key of the fifth variable </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="610" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="610" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1ae16654ff529ddcfedd1b394f7716412d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::~NoiseModelFactor5</definition>
        <argsstring>()</argsstring>
        <name>~NoiseModelFactor5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="613" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="613" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1a23886196ba086677b1e2168e17a34280" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Key</type>
        <definition>Key gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::key1</definition>
        <argsstring>() const </argsstring>
        <name>key1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>methods to retrieve keys </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="616" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="616" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1a464749bd22a65ee29f99452f194eaf54" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Key</type>
        <definition>Key gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::key2</definition>
        <argsstring>() const </argsstring>
        <name>key2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="617" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="617" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1a028c4fbddfe09a66ac3780e23bd25fcd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Key</type>
        <definition>Key gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::key3</definition>
        <argsstring>() const </argsstring>
        <name>key3</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="618" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="618" bodyend="618"/>
      </memberdef>
      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1aac1933a0fa685709867f12cb636c98d3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Key</type>
        <definition>Key gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::key4</definition>
        <argsstring>() const </argsstring>
        <name>key4</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="619" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="619" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1a529d24a558fe3e6bd1dc4839c9778f0c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Key</type>
        <definition>Key gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::key5</definition>
        <argsstring>() const </argsstring>
        <name>key5</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="620" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="620" bodyend="620"/>
      </memberdef>
      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1a701b7a764f18310b4eea14ee023c922b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>Vector</type>
        <definition>virtual Vector gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::unwhitenedError</definition>
        <argsstring>(const Values &amp;x, boost::optional&lt; std::vector&lt; Matrix &gt; &amp; &gt; H=boost::none) const </argsstring>
        <name>unwhitenedError</name>
        <reimplements refid="classgtsam_1_1NoiseModelFactor_1afd61874915a8076bf83f9d8311fc0e26">unwhitenedError</reimplements>
        <param>
          <type>const Values &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>boost::optional&lt; std::vector&lt; Matrix &gt; &amp; &gt;</type>
          <declname>H</declname>
          <defval>boost::none</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calls the 5-key specific version of evaluateError, which is pure virtual so must be implemented in the derived class. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="624" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="624" bodyend="633"/>
      </memberdef>
      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1af0adaca3d551e42404aaf98c3053b009" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>Vector</type>
        <definition>virtual Vector gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::evaluateError</definition>
        <argsstring>(const X1 &amp;, const X2 &amp;, const X3 &amp;, const X4 &amp;, const X5 &amp;, boost::optional&lt; Matrix &amp; &gt; H1=boost::none, boost::optional&lt; Matrix &amp; &gt; H2=boost::none, boost::optional&lt; Matrix &amp; &gt; H3=boost::none, boost::optional&lt; Matrix &amp; &gt; H4=boost::none, boost::optional&lt; Matrix &amp; &gt; H5=boost::none) const =0</argsstring>
        <name>evaluateError</name>
        <param>
          <type>const X1 &amp;</type>
        </param>
        <param>
          <type>const X2 &amp;</type>
        </param>
        <param>
          <type>const X3 &amp;</type>
        </param>
        <param>
          <type>const X4 &amp;</type>
        </param>
        <param>
          <type>const X5 &amp;</type>
        </param>
        <param>
          <type>boost::optional&lt; Matrix &amp; &gt;</type>
          <declname>H1</declname>
          <defval>boost::none</defval>
        </param>
        <param>
          <type>boost::optional&lt; Matrix &amp; &gt;</type>
          <declname>H2</declname>
          <defval>boost::none</defval>
        </param>
        <param>
          <type>boost::optional&lt; Matrix &amp; &gt;</type>
          <declname>H3</declname>
          <defval>boost::none</defval>
        </param>
        <param>
          <type>boost::optional&lt; Matrix &amp; &gt;</type>
          <declname>H4</declname>
          <defval>boost::none</defval>
        </param>
        <param>
          <type>boost::optional&lt; Matrix &amp; &gt;</type>
          <declname>H5</declname>
          <defval>boost::none</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Override this method to finish implementing a 5-way factor. If any of the optional Matrix reference arguments are specified, it should compute both the function evaluation and its derivative(s) in X1 (and/or X2, X3). </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="641" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classgtsam_1_1NoiseModelFactor5_1a02db3a5d618d3738c5ec277626a2b598" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class ARCHIVE</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;::serialize</definition>
        <argsstring>(ARCHIVE &amp;ar, const unsigned int)</argsstring>
        <name>serialize</name>
        <param>
          <type>ARCHIVE &amp;</type>
          <declname>ar</declname>
        </param>
        <param>
          <type>const unsigned</type>
          <declname>int</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/doc-test-files/NonlinearFactor.h" line="653" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="653" bodyend="656"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>A convenient base class for creating your own <ref refid="classgtsam_1_1NoiseModelFactor" kindref="compound">NoiseModelFactor</ref> with 5 variables. To derive from this class, implement <ref refid="classgtsam_1_1NoiseModelFactor5_1af0adaca3d551e42404aaf98c3053b009" kindref="member">evaluateError()</ref>. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="134">
        <label>Factor</label>
      </node>
      <node id="131">
        <label>gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;</label>
        <link refid="classgtsam_1_1NoiseModelFactor5"/>
        <childnode refid="132" relation="public-inheritance">
        </childnode>
      </node>
      <node id="133">
        <label>gtsam::NonlinearFactor</label>
        <link refid="classgtsam_1_1NonlinearFactor"/>
        <childnode refid="134" relation="public-inheritance">
        </childnode>
      </node>
      <node id="132">
        <label>gtsam::NoiseModelFactor</label>
        <link refid="classgtsam_1_1NoiseModelFactor"/>
        <childnode refid="133" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="138">
        <label>Factor</label>
      </node>
      <node id="135">
        <label>gtsam::NoiseModelFactor5&lt; VALUE1, VALUE2, VALUE3, VALUE4, VALUE5 &gt;</label>
        <link refid="classgtsam_1_1NoiseModelFactor5"/>
        <childnode refid="136" relation="public-inheritance">
        </childnode>
      </node>
      <node id="137">
        <label>gtsam::NonlinearFactor</label>
        <link refid="classgtsam_1_1NonlinearFactor"/>
        <childnode refid="138" relation="public-inheritance">
        </childnode>
      </node>
      <node id="136">
        <label>gtsam::NoiseModelFactor</label>
        <link refid="classgtsam_1_1NoiseModelFactor"/>
        <childnode refid="137" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="tests/doc-test-files/NonlinearFactor.h" line="578" column="1" bodyfile="tests/doc-test-files/NonlinearFactor.h" bodystart="578" bodyend="657"/>
    <listofallmembers>
      <member refid="classgtsam_1_1NonlinearFactor_1a1968f471dc3ea33aaf0226ff7be5ae8c" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>active</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1a594617cffc3d1a9985cd64e34936a7f5" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>Base</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1ac98d07dd8f7b70e16ccb9a01abf56b9c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>boost::serialization::access</name></member>
      <member refid="classgtsam_1_1NonlinearFactor_1aa98a30a78ade8489214ce2e5b8302777" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>clone</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor_1af4f62b52fff1a0527ecdb279de023728" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>dim</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor_1a616d0335db512e9c333cab83b1923399" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>equals</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor_1af6147aff3a33f734435601f6dcafeaf9" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>error</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1af0adaca3d551e42404aaf98c3053b009" prot="public" virt="pure-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>evaluateError</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor_1a16a8a23069ce6ae664f516edc8f36254" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>get_noiseModel</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1a23886196ba086677b1e2168e17a34280" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>key1</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1a464749bd22a65ee29f99452f194eaf54" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>key2</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1a028c4fbddfe09a66ac3780e23bd25fcd" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>key3</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1aac1933a0fa685709867f12cb636c98d3" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>key4</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1a529d24a558fe3e6bd1dc4839c9778f0c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>key5</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor_1a0c83582a0bd04e112e4c0a17cd4ed324" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>linearize</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor_1a123e5729d70b4acd6d7e1f70b1a7ced4" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>noiseModel</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor_1a2263eabbefe0eede8c9d10486f61bb4d" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>noiseModel_</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor_1ad6e8ef3348e042d598617d1d55f20300" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>NoiseModelFactor</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor_1a02cea97db30d27b51feaf1f0444d743c" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>NoiseModelFactor</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor_1a4605224417029e9dc58c5267efa9a46d" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>NoiseModelFactor</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1a424c4633f6c1907d0dd3381cffbed82a" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>NoiseModelFactor5</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1a01d2e8a5253a67ceac02320a719c5280" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>NoiseModelFactor5</name></member>
      <member refid="classgtsam_1_1NonlinearFactor_1a7c719ae67f222f66569ccb3b526cb9cb" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>NonlinearFactor</name></member>
      <member refid="classgtsam_1_1NonlinearFactor_1a8a7610dba7e9a6f878268c2769ea0e04" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>NonlinearFactor</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor_1a682e0bbaf0c9638b7d0d96148082d1d7" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>print</name></member>
      <member refid="classgtsam_1_1NonlinearFactor_1a95f4d57e8646b6df634496aaabb683b5" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>rekey</name></member>
      <member refid="classgtsam_1_1NonlinearFactor_1a5f760600e8608ef15c825a0f8d1d1855" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>rekey</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1a02db3a5d618d3738c5ec277626a2b598" prot="private" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>serialize</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor_1a57d98d52fb6f91ebc54d74746aeb90e4" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>shared_ptr</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1a19020d6d909366475872911b6dfc16df" prot="protected" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>This</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1a701b7a764f18310b4eea14ee023c922b" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>unwhitenedError</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor_1a1b3ea51380315bfd63f60d8d9195b0c1" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>whitenedError</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1a514869f1357a9e05118bfab0c6fa97e2" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>X1</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1ad9181205117e8efb56ebe4f297645d3e" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>X2</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1aeb3efb9dbda7a2fef53c55a4513ab4ec" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>X3</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1a4e272b4742d0477f444995ec73e097c7" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>X4</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1afaf024c990892895e5f5ed0b34758f27" prot="public" virt="non-virtual"><scope>gtsam::NoiseModelFactor5</scope><name>X5</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor_1ae1ed5e0fa6c471b57172f7ebaf552187" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>~NoiseModelFactor</name></member>
      <member refid="classgtsam_1_1NoiseModelFactor5_1ae16654ff529ddcfedd1b394f7716412d" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>~NoiseModelFactor5</name></member>
      <member refid="classgtsam_1_1NonlinearFactor_1ac457810c504de58732d51d61f715c2de" prot="public" virt="virtual"><scope>gtsam::NoiseModelFactor5</scope><name>~NonlinearFactor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
